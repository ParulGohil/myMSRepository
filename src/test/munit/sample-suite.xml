<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="sample-suite.xml" />
	<munit:test name="sampleFlow-test" doc:id="8cfed1ce-cc9a-4f63-8760-c54c59424873" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="19d0b407-c3dc-4e1e-a218-53240ade262c" >
				<munit:payload value="#[output application/json --- readUrl('classpath://sampleFlowtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://sampleFlowtest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sampleFlow" doc:id="f0195eaf-0dda-4c58-8672-3aedd34b2704" name="sampleFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="b900d912-bd8f-4b7a-9e02-b38c3f248051" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import sampleFlowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="sampleFlow-test_CG" doc:id="06562b5e-1648-4087-9310-c5a1e5b1a933" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Set Variable" doc:id="f535bdcf-3968-4700-8515-7fa033105d44" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4d45127a-59c8-4ebf-933c-2f27463b4aab" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="salary" value="#[readUrl('classpath://sampleFlowtestCG\mock_variable_.dwl')]" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="60545b71-6470-41ac-959b-d338fe0a1685" >
				<munit:payload value="#[output application/json --- readUrl('classpath://sampleFlowtestCG\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://sampleFlowtestCG\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sampleFlow" doc:id="8ae1cad3-6e5f-4d10-a340-54efadeee5dc" name="sampleFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ff18a17e-eb17-4a32-a924-a170a87693b9" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import sampleFlowtestCG::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
